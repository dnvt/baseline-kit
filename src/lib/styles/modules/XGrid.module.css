.container {
  position: absolute;
  pointer-events: none;
  user-select: none;
  z-index: var(--grid-z-index, -1);
  top: 0;
  bottom: 0;
  height: 100%;
  width: var(--grid-max-width, 100%);
  padding: var(--grid-padding, 0);
}

.columnsContainer {
  height: 100%;
  width: 100%;
  display: grid;
  grid-template-columns: var(--grid-template-columns);
  gap: var(--grid-gap, 16px);
  justify-content: var(--grid-justify, start);
}

.column {
  height: 100%;
  background-color: var(--column-color, #00baff26);
  width: 100%;
  min-width: 0;
}

.lineColumn {
  width: var(--column-width, 1px);
}

/* Responsive breakpoints using CSS variables */
@container (min-width: var(--breakpoint-sm, 640px)) {
  .container {
    --grid-columns: var(--grid-columns-sm, var(--grid-columns-base));
    --grid-gap: var(--grid-gap-sm, var(--grid-gap-base));
  }
}

@container (min-width: var(--breakpoint-md, 768px)) {
  .container {
    --grid-columns: var(--grid-columns-md, var(--grid-columns-sm, var(--grid-columns-base)));
    --grid-gap: var(--grid-gap-md, var(--grid-gap-sm, var(--grid-gap-base)));
  }
}

@container (min-width: var(--breakpoint-lg, 1024px)) {
  .container {
    --grid-columns: var(--grid-columns-lg, var(--grid-columns-md, var(--grid-columns-sm, var(--grid-columns-base))));
    --grid-gap: var(--grid-gap-lg, var(--grid-gap-md, var(--grid-gap-sm, var(--grid-gap-base))));
  }
}

@container (min-width: var(--breakpoint-xl, 1280px)) {
  .container {
    --grid-columns: var(--grid-columns-xl, var(--grid-columns-lg, var(--grid-columns-md, var(--grid-columns-sm, var(--grid-columns-base)))));
    --grid-gap: var(--grid-gap-xl, var(--grid-gap-lg, var(--grid-gap-md, var(--grid-gap-sm, var(--grid-gap-base)))));
  }
}

@container (min-width: var(--breakpoint-xxl, 1536px)) {
  .container {
    --grid-columns: var(--grid-columns-xxl, var(--grid-columns-xl, var(--grid-columns-lg, var(--grid-columns-md, var(--grid-columns-sm, var(--grid-columns-base))))));
    --grid-gap: var(--grid-gap-xxl, var(--grid-gap-xl, var(--grid-gap-lg, var(--grid-gap-md, var(--grid-gap-sm, var(--grid-gap-base))))));
  }
}