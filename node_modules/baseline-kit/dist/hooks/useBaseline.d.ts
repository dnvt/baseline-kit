import { RefObject } from 'react';
import type { SnappingMode, Padding } from '@components';
export interface BaselineOptions {
    base?: number;
    /** Snapping strategy: 'none' | 'height' | 'clamp'. */
    snapping?: SnappingMode;
    /** Initial padding config.  e.g. { top: 10, bottom: 20 } or just 8, etc. */
    spacing?: Partial<Padding> | number;
    /** Whether to warn in the console if the measured height is not a multiple of base. */
    warnOnMisalignment?: boolean;
}
export interface BaselineResult {
    padding: Padding;
    isAligned: boolean;
    height: number;
}
/**
 *  Hook for managing baseline grid alignment in components.
 *
 *  @remarks
 *  This hook handles the complex calculations needed to maintain baseline grid
 *  alignment, including:
 *    ▪	Measuring element dimensions
 *    ▪	Calculating padding adjustments
 *    ▪	Potentially snapping values to ensure multiples of the base
 *    ▪	Warning about misalignments in development
 *
 *  Different snapping modes affect how spacing is adjusted:
 *    ▪	'none': Uses raw spacing values without adjustment
 *    ▪	'height': Adjusts only the final (bottom) padding to align
 *    ▪	'clamp': Adjusts top and bottom to align
 *
 *  @param ref Reference to the DOM element
 *  @param options Configuration options for alignment behavior
 *  @returns Object with adjusted padding, alignment status, and height
 *
 *  @example
 *  function MyComponent() {
 *  const ref = useRef<HTMLDivElement>(null)
 *  const { padding, isAligned } = useBaseline(ref, {
 *  base: 8,
 *  snapping: 'height',
 *  spacing: { top: 10, bottom: 20 },
 *  warnOnMisalignment: true,
 *  })
 *
 *  return (
 *  <div
 *    ref={ref}
 *    style={{
 *      paddingTop: padding.top,
 *      paddingBottom: padding.bottom,
 *    }}
 *  >
 *    Content
 *  </div>
 *  )
 *  }
 */
export declare function useBaseline(ref: RefObject<HTMLElement | null>, { base, snapping, spacing, warnOnMisalignment, }?: BaselineOptions): BaselineResult;
