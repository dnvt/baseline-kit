import * as React from 'react';
export interface MeasureResult {
    /** Measured width in pixels */
    width: number;
    /** Measured height in pixels */
    height: number;
    /** Function to force a remeasurement */
    refresh: () => void;
}
/**
 * Hook for measuring and tracking DOM element dimensions.
 *
 * Provides responsive element measurements using ResizeObserver,
 * with performance optimization (via RAF throttling), error handling,
 * and a manual refresh method.
 *
 * @param ref - Reference to the DOM element to measure
 * @returns Current dimensions and refresh function
 *
 * @example
 * ```tsx
 * function ResponsiveBox() {
 *   const ref = React.useRef<HTMLDivElement>(null);
 *   const { width, height, refresh } = useMeasure(ref);
 *
 *   return (
 *     <div ref={ref} className="responsive-box">
 *       Width: {width}px, Height: {height}px
 *       <button onClick={refresh}>Remeasure</button>
 *     </div>
 *   );
 * }
 * ```
 */
export declare function useMeasure(ref: React.RefObject<HTMLElement | null>): MeasureResult;
