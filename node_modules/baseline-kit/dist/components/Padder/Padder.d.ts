/**
 * @file Padder Component
 * @description Low-level padding management with visual debugging
 * @module components
 */
import * as React from 'react';
import { IndicatorNode } from '../Spacer';
/**
 * A foundational component that manages consistent padding with visual debugging.
 *
 * @remarks
 * Padder is a low-level utility that:
 * - Applies consistent padding around content
 * - Supports visual debugging of spacing
 * - Maintains baseline grid alignment
 * - Uses Spacer components for visual padding representation
 *
 * When debugging is enabled (`"visible"` or `"hidden"`), padding is represented
 * using Spacer components. When debugging is `"none"`, direct CSS padding is
 * applied for better performance.
 *
 * @example
 * ```tsx
 * // Basic usage
 * <Padder block={16} inline={8}>
 *   <div>Content with consistent padding</div>
 * </Padder>
 *
 * // With debug visuals and custom indicators
 * <Padder
 *   block={[8, 16]}
 *   inline={[16, 24]}
 *   debugging="visible"
 *   indicatorNode={(value, dim) => (
 *     <span className="text-sm">{dim}: {value}px</span>
 *   )}
 * >
 *   <div>Content with visible padding guides</div>
 * </Padder>
 *
 * // Direct padding mode
 * <Padder
 *   block={16}
 *   inline={24}
 *   debugging="none"
 * >
 *   <div>Content with direct CSS padding</div>
 * </Padder>
 * ```
 */
export declare const Padder: React.NamedExoticComponent<{
    /** Render function for custom measurement indicators */
    indicatorNode?: IndicatorNode;
    children?: React.ReactNode;
} & {
    debugging?: import("..").DebuggingMode;
    className?: string;
    style?: React.CSSProperties;
    height?: React.CSSProperties["height"];
    width?: React.CSSProperties["width"];
} & import("..").SpacingProps & React.RefAttributes<HTMLDivElement>>;
