/**
 * @file Stack Component
 * @description Flex container with baseline grid alignment
 * @module components
 */
import * as React from 'react';
import type { Gaps, IndicatorNode } from '@components';
import { ComponentsProps, Variant } from '../types';
export type StackProps = {
    /** Main axis orientation */
    direction?: 'row' | 'column';
    /** Distribution of space on main axis */
    justify?: React.CSSProperties['justifyContent'];
    /** Alignment on cross axis */
    align?: React.CSSProperties['alignItems'];
    /** Container width (defaults to "auto") */
    width?: React.CSSProperties['width'];
    /** Container height (defaults to "auto") */
    height?: React.CSSProperties['height'];
    /** Custom measurement indicator renderer */
    indicatorNode?: IndicatorNode;
    /** Visual style in debug mode */
    variant?: Variant;
    children?: React.ReactNode;
} & ComponentsProps & Gaps;
/**
 * A flexible container component aligning children to the baseline grid.
 *
 * @remarks
 * Stack provides a flex container that:
 * - Maintains baseline grid alignment
 * - Supports both row and column layouts
 * - Handles consistent spacing between items
 * - Includes visual debug overlays
 *
 * Key features:
 * - Automatic dimension management (defaults to auto)
 * - Direct padding application in non-debug mode
 * - Comprehensive alignment controls
 * - Theme-aware debug visuals
 *
 * @example
 * ```tsx
 * // Basic horizontal stack
 * <Stack gap={16}>
 *   <div>Item 1</div>
 *   <div>Item 2</div>
 * </Stack>
 *
 * // Vertical stack with alignment
 * <Stack
 *   direction="column"
 *   gap={24}
 *   align="center"
 *   justify="space-between"
 *   debugging="visible"
 * >
 *   <div>Top</div>
 *   <div>Middle</div>
 *   <div>Bottom</div>
 * </Stack>
 *
 * // Complex layout with padding
 * <Stack
 *   direction="row"
 *   gap={32}
 *   align="stretch"
 *   block={[16, 24]}
 *   inline={16}
 *   debugging="visible"
 * >
 *   <div>Panel 1</div>
 *   <div>Panel 2</div>
 * </Stack>
 * ```
 */
export declare const Stack: React.NamedExoticComponent<StackProps>;
