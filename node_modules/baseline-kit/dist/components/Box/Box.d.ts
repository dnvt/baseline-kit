/**
 * @file Box Component
 * @description A fundamental layout container with baseline grid alignment
 * @module components
 */
import * as React from 'react';
/**
 * Determines how the Box component aligns to the baseline grid.
 *
 * @remarks
 * - `none`: No snapping; uses raw spacing values as provided
 * - `height`: Only container height snaps to base unit multiples
 * - `clamp`: Both height and spacing values snap to base unit multiples
 */
export type SnappingMode = 'none' | 'height' | 'clamp';
/**
 * A foundational container component that ensures consistent spacing and baseline alignment.
 *
 * @remarks
 * Box provides a layout container that:
 * - Ensures consistent spacing aligned to the baseline grid
 * - Supports grid layout integration through span props
 * - Offers configurable snapping modes for fine-grained alignment control
 * - Includes debug overlays for visual alignment verification
 *
 * By default, Box uses "auto" for both width and height unless explicitly specified.
 *
 * @example
 * ```tsx
 * // Basic usage with spacing
 * <Box block={16} inline={8}>
 *   <p>Content aligned to baseline</p>
 * </Box>
 *
 * // With grid spanning and custom snapping
 * <Box
 *   colSpan={2}
 *   rowSpan={1}
 *   snapping="height"
 *   debugging="visible"
 * >
 *   <p>Grid-integrated content</p>
 * </Box>
 * ```
 */
export declare const Box: React.NamedExoticComponent<{
    /** Number of columns to span in a grid layout */
    colSpan?: number;
    /** Number of rows to span in a grid layout */
    rowSpan?: number;
    /** Shorthand for equal column and row span. Takes precedence over individual spans */
    span?: number;
    /** Controls baseline grid alignment behavior */
    snapping?: SnappingMode;
    children?: React.ReactNode;
} & {
    debugging?: import("..").DebuggingMode;
    className?: string;
    style?: React.CSSProperties;
    height?: React.CSSProperties["height"];
    width?: React.CSSProperties["width"];
} & import("..").SpacingProps & React.RefAttributes<HTMLDivElement>>;
