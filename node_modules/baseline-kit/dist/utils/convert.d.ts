/**
 * @file convert.ts
 * @description Unit conversion and dimension calculation utilities
 * @module utils
 */
export interface ConversionContext {
    /** Parent element dimension for relative units */
    parentSize?: number;
    /** Viewport width for vw units */
    viewportWidth?: number;
    /** Viewport height for vh units */
    viewportHeight?: number;
    /** Root font size for rem units */
    rootFontSize?: number;
    /** Parent font size for em units */
    parentFontSize?: number;
}
/** Conversion factors for absolute units to pixels */
export declare const ABSOLUTE_UNIT_CONVERSIONS: Record<string, number>;
/** Supported relative CSS units */
export declare const RELATIVE_UNITS: string[];
/**
 * Converts CSS values to pixels.
 *
 * @remarks
 * Handles conversion of:
 * - Absolute units (px, in, cm, mm, pt, pc)
 * - Relative units (em, rem, vh, vw, vmin, vmax, %)
 * - Number values (treated as pixels)
 *
 * @param value - CSS value to convert
 * @param context - Optional context for relative unit conversion
 * @returns Value in pixels or null if conversion fails
 *
 * @example
 * ```ts
 * // Absolute units
 * convertValue('100px') // => 100
 * convertValue('1in')   // => 96
 *
 * // Relative units with context
 * convertValue('50%', { parentSize: 200 }) // => 100
 * convertValue('2em', { parentFontSize: 16 }) // => 32
 * ```
 */
export declare function convertValue(value: number | string | undefined, context?: ConversionContext): number | null;
